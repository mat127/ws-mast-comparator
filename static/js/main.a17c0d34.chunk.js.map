{"version":3,"sources":["mast lazy /^/.*/.json$/ groupOptions: {} namespace object","Filter.js","mast/all.js","Comparator.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","FilterState","source","this","diameter","Set","year","namePrefix","mast","filterDiameter","filterYear","filterName","name","size","has","prefix","substr","toUpperCase","data","options","forEach","add","Array","from","sort","y1","y2","Filter","props","state","FilterGroup","label","onChange","diameterChanged","yearChanged","className","onClick","clearYearFilter","NamePrefixGroup","namePrefixChanged","clearNamePrefixFilter","event","target","checked","delete","parseInt","clear","React","Component","items","FilterGroupOption","type","htmlFor","NamePrefixOption","loadAll","years","all","y","masts","setYear","default","dataPerYear","reduce","yearData","concat","merge","m","i","ProfileClass","min","max","profile","All","find","cls","includes","getClassOf","undefined","HardTop","ConstantCurve","FlexTop","Comparator","allMasts","comparedMasts","highlightedProfile","filter","createDefaultOptions","loadMastData","setMastData","c","filterChanged","ComparatorHeader","comparator","ComparedMasts","NotComparedMasts","setState","createOptions","change","clone","length","profileClass","m1","m2","compareToProfile","isAnyCompared","getClassNameOf","isHighlighted","sortByName","compareMastName","dp","Math","abs","getClassName","isHighlightedClass","colSpan","title","sortProfileFirst","getTypical","ComparatorFooter","style","textAlign","renderNonEmpty","renderEmpty","removeAll","SortingHeader","sortByNameAscending","sortByNameDescending","getProfileColumns","columns","key","getProfileClassName","MastRow","buttons","remove","isCompared","compare","ProfileDataColumns","calculateColumnValues","v","renderColumn","value","renderClickableMark","values","ReactDOM","render","document","getElementById"],"mappings":"iKAAA,IAAIA,EAAM,CACT,cAAe,CACd,GACA,GAED,cAAe,CACd,GACA,GAED,cAAe,CACd,GACA,GAED,cAAe,CACd,GACA,GAED,cAAe,CACd,GACA,GAED,cAAe,CACd,GACA,IAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,WACzC,OAAOJ,EAAoBU,EAAED,EAAI,MAGnCX,EAAoBa,KAAO,WAC1B,OAAOC,OAAOD,KAAKd,IAEpBC,EAAoBW,GAAK,GACzBI,EAAOC,QAAUhB,G,oICzCJiB,G,MAAb,WAEE,WAAYC,GAAS,oBAChBA,GACDC,KAAKC,SAAW,IAAIC,IAAIH,EAAOE,UAC/BD,KAAKG,KAAO,IAAID,IAAIH,EAAOI,MAC3BH,KAAKI,WAAa,IAAIF,IAAIH,EAAOK,cAGjCJ,KAAKC,SAAW,IAAIC,IAAI,CAAC,MAAO,QAChCF,KAAKG,KAAO,IAAID,IAAI,CAAC,OACrBF,KAAKI,WAAa,IAAIF,KAX5B,oDA+CI,OAAO,IAAIJ,EAAYE,QA/C3B,6BAkDSK,GACL,OAAOL,KAAKM,eAAeD,EAAKJ,WAC3BD,KAAKO,WAAWF,EAAKF,OACrBH,KAAKQ,WAAWH,EAAKI,QArD9B,qCAwDiBR,GACb,QAAOD,KAAKC,SAASS,KAAO,IAAIV,KAAKC,SAASU,IAAIV,KAzDtD,iCA4DaE,GACT,QAAOH,KAAKG,KAAKO,KAAO,IAAIV,KAAKG,KAAKQ,IAAIR,KA7D9C,iCAgEaM,GACT,IAAMG,EAASH,EAAKI,OAAO,EAAE,GAAGC,cAChC,QAAOd,KAAKI,WAAWM,KAAO,IAAIV,KAAKI,WAAWO,IAAIC,MAlE1D,8CAgBI,MAAO,CACLX,SAAU,GACVE,KAAM,GACNC,WAAY,MAnBlB,oCAuBuBW,GACnB,IAAIC,EAAU,CACZf,SAAU,IAAIC,IACdC,KAAM,IAAID,IACVE,WAAY,IAAIF,KAgBlB,OAdAa,EAAKE,SACH,SAASZ,GACPW,EAAQf,SAASiB,IAAIb,EAAKJ,UAC1Be,EAAQb,KAAKe,IAAIb,EAAKF,MACtBa,EAAQZ,WAAWc,IAAIb,EAAKI,KAAKI,OAAO,EAAE,GAAGC,mBAGjDE,EAAU,CACRf,SAAUkB,MAAMC,KAAKJ,EAAQf,UAC7BE,KAAMgB,MAAMC,KAAKJ,EAAQb,MACzBC,WAAYe,MAAMC,KAAKJ,EAAQZ,cAEzBD,KAAKkB,MAAK,SAACC,EAAGC,GAAJ,OAAWA,EAAGD,KAChCN,EAAQZ,WAAWiB,OACZL,MA3CX,MAsEqBQ,E,uKAET,IAAD,OACDR,EAAUhB,KAAKyB,MAAMT,QACrBU,EAAQ1B,KAAKyB,MAAMC,MACzB,OACE,sBAAKlC,GAAG,SAAR,UACE,cAACmC,EAAD,CACEC,MAAM,YACNZ,QAASA,EAAQf,SACjByB,MAAOA,EAAMzB,SACb4B,SAAU,SAAAzC,GAAC,OAAI,EAAK0C,gBAAgB1C,MAEtC,cAACuC,EAAD,CACEC,MAAM,QACNZ,QAASA,EAAQb,KACjBuB,MAAOA,EAAMvB,KACb0B,SAAU,SAAAzC,GAAC,OAAI,EAAK2C,YAAY3C,MAElC,wBAAQ4C,UAAU,QAAQC,QAAS,SAAA7C,GAAC,OAAI,EAAK8C,mBAA7C,mBACA,cAACC,EAAD,CACEnB,QAASA,EAAQZ,WACjBsB,MAAOA,EAAMtB,WACbyB,SAAU,SAAAzC,GAAC,OAAI,EAAKgD,kBAAkBhD,MAExC,wBAAQ4C,UAAU,QAAQC,QAAS,SAAA7C,GAAC,OAAI,EAAKiD,yBAA7C,wB,sCAKUC,GACd,IAAMrC,EAAWqC,EAAMC,OAAO/C,GAC9BQ,KAAKyB,MAAMI,UAAS,SAASH,GACxBY,EAAMC,OAAOC,QACdd,EAAMzB,SAASiB,IAAIjB,GAEnByB,EAAMzB,SAASwC,OAAOxC,Q,kCAIhBqC,GACV,IAAMnC,EAAOuC,SAASJ,EAAMC,OAAO/C,IACnCQ,KAAKyB,MAAMI,UAAS,SAASH,GACxBY,EAAMC,OAAOC,QACdd,EAAMvB,KAAKe,IAAIf,GAEfuB,EAAMvB,KAAKsC,OAAOtC,Q,wCAKtBH,KAAKyB,MAAMI,UAAS,SAASH,GAC3BA,EAAMvB,KAAKwC,a,wCAIGL,GAChB,IAAM1B,EAAS0B,EAAMC,OAAO/C,GAC5BQ,KAAKyB,MAAMI,UAAS,SAASH,GACxBA,EAAMtB,WAAWO,IAAIC,GACtBc,EAAMtB,WAAWqC,OAAO7B,GAExBc,EAAMtB,WAAWc,IAAIN,Q,8CAKzBZ,KAAKyB,MAAMI,UAAS,SAASH,GAC3BA,EAAMtB,WAAWuC,e,GApEaC,IAAMC,WAyE1C,SAASlB,EAAYF,GACnB,IAAMqB,EAAQrB,EAAMT,QAAQpC,KAC1B,SAACI,GAAD,OACE,cAAC+D,EAAD,CAEEvD,GAAIR,EACJwD,QAASf,EAAMC,MAAMf,IAAI3B,GACzB6C,SAAUJ,EAAMI,UAHX7C,MAOX,OACE,sBAAKgD,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAjB,SAA0BP,EAAMG,QAC/BkB,KAKP,SAASC,EAAkBtB,GACzB,OACE,sBAAKO,UAAU,QAAf,UACE,mCAAOgB,KAAK,YAAevB,IAC3B,uBAAOwB,QAASxB,EAAMjC,GAAtB,SAA2BiC,EAAMjC,QAKvC,SAAS2C,EAAgBV,GACvB,IAAMT,EAAUS,EAAMT,QAAQpC,KAC5B,SAASgC,GACP,OAAO,cAACsC,EAAD,CACQtC,OAAQA,EACrBc,MAAOD,EAAMC,MACbG,SAAUJ,EAAMI,UAFXjB,MAKX,OACE,sBAAKoB,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAjB,uBACChB,KAKP,SAASkC,EAAiBzB,GACxB,IACIO,EAAY,cAGhB,OAJkBP,EAAMC,MAAMf,IAAIc,EAAMb,UAGtCoB,GAAa,wBAEb,wBACEA,UAAWA,EACXxC,GAAIiC,EAAMb,OACVqB,QAASR,EAAMI,SAHjB,SAIEJ,EAAMb,S,MCzMG,SAASuC,IACpB,OAGUC,EAHE,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,MAIjCnE,QAAQoE,IAAID,EAAMxE,KAAI,SAAA0E,GAAC,OAQZnD,EAR2BmD,EAStC,MAAO,KAAOnD,EAAO,SACzBhB,MAAK,SAASS,GAEb,OAIN,SAAiB2D,EAAOpD,GACtBoD,EAAMtC,SAAQ,SAASZ,GACrBA,EAAKF,KAAOA,KAPVqD,CAAQ5D,EAAO6D,QAAQtD,GAChBP,EAAO6D,WAJpB,IAAoBtD,MAPfhB,MAAK,SAASuE,GACb,IAAML,EAoBZ,SAAeK,GACb,OAAOA,EAAYC,QACjB,SAACN,EAAIO,GAAL,OAAkBP,EAAIQ,OAAOD,KAC7B,IAvBcE,CAAMJ,GAElB,OADYL,EA2BVpC,SAAQ,SAAU8C,EAAEC,GAAKD,EAAEvE,GAAKwE,KA1B3BX,KALb,IAAcD,E,ICERa,E,WAEJ,WAAYC,EAAIC,EAAInC,GAAY,oBAC9BhC,KAAKkE,IAAMA,EACXlE,KAAKmE,IAAMA,EACXnE,KAAKgC,UAAYA,E,qDAGVoC,GACP,OAAOA,GAAWpE,KAAKkE,KAAOE,GAAWpE,KAAKmE,M,mCAI9C,OAAQnE,KAAKkE,IAAMlE,KAAKmE,KAAK,K,kCAabC,GAChB,OAAOpE,KAAKqE,IAAIC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAASJ,Q,qCAGrBA,GACpB,IAAMG,EAAMvE,KAAKyE,WAAWL,GAC5B,OAAOG,EAAMA,EAAIvC,eAAY0C,M,KAhC3BT,EAgBGU,QAAU,IAAIV,EAAa,EAAE,EAAE,YAhBlCA,EAiBGW,cAAgB,IAAIX,EAAa,EAAE,GAAG,kBAjBzCA,EAkBGY,QAAU,IAAIZ,EAAa,GAAG,GAAG,YAlBpCA,EAoBGI,IAAM,CApBTJ,EAqBGU,QArBHV,EAsBGW,cAtBHX,EAuBGY,S,IAaYC,E,kDAEnB,WAAYrD,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXqD,SAAU,GACVC,cAAe,GACfC,wBAAoBP,EACpBQ,OAAQ,CACNxD,MAAO,IAAI5B,EACXkB,QAASlB,EAAYqF,yBAGzBC,IAAejG,MAAK,SAAA4B,GAElB,OADA,EAAKsE,YAAYtE,GACVA,KAbQ,E,qDAiBT,IAAD,OACP,OACE,sBAAKvB,GAAG,aAAR,UACE,cAAC,EAAD,CACEkC,MAAO1B,KAAK0B,MAAMwD,OAAOxD,MACzBV,QAAShB,KAAK0B,MAAMwD,OAAOlE,QAC3Ba,SAAU,SAAAyD,GAAC,OAAI,EAAKC,cAAcD,MAEpC,kCACE,cAACE,EAAD,CAAkBC,WAAYzF,OAC9B,kCACE,cAAC0F,EAAD,CAAenC,MAAOvD,KAAK0B,MAAMsD,cAAeS,WAAYzF,OAC5D,cAAC,EAAD,CAAkByF,WAAYzF,OAC9B,cAAC,EAAD,CAAeyF,WAAYzF,OAC3B,cAAC2F,EAAD,CACEpC,MAAOvD,KAAK0B,MAAMqD,SAClBG,OAAQ,SAAAnB,GAAC,OAAI,EAAKrC,MAAMwD,OAAOxD,MAAMwD,OAAOnB,IAC5C0B,WAAYzF,kB,kCAQZe,GACVf,KAAK4F,SAAS,CACZb,SAAUhE,EACVmE,OAAQ,CACNxD,MAAO1B,KAAK0B,MAAMwD,OAAOxD,MACzBV,QAASlB,EAAY+F,cAAc9E,Q,oCAK3B+E,GACZ,IAAMpE,EAAQ1B,KAAK0B,MAAMwD,OAAOxD,MAAMqE,QACtCD,EAAOpE,GACP1B,KAAK4F,SAAS,CACZV,OAAQ,CACNxD,MAAOA,EACPV,QAAShB,KAAK0B,MAAMwD,OAAOlE,a,8BAKzBX,GACN,IAAIyF,EAAS,CACXd,cAAehF,KAAK0B,MAAMsD,cAAcnB,OAAO,CAACxD,KAElDyF,EAAOb,mBAAqBa,EAAOd,cAAc,GAAGZ,QACpDpE,KAAK4F,SAASE,K,6BAGTzF,GACL,IAAIyF,EAAS,CACXd,cAAehF,KAAK0B,MAAMsD,cAAcE,QAAO,SAAAnB,GAAC,OAAIA,IAAM1D,MAE5DyF,EAAOb,mBAAqBa,EAAOd,cAAcgB,OAAS,EACxDF,EAAOd,cAAc,GAAGZ,aACxBM,EACF1E,KAAK4F,SAASE,K,kCAId9F,KAAK4F,SAAS,CACZZ,cAAe,GACfC,wBAAoBP,M,iCAIbrE,GACT,OAAOL,KAAK0B,MAAMsD,cAAcR,SAASnE,K,sCAIzC,OAAOL,KAAK0B,MAAMsD,cAAcgB,OAAS,I,oCAG7B5B,GACZ,OAAOpE,KAAK0B,MAAMuD,qBAAuBb,I,yCAGxB6B,GACjB,OAAOA,EAAazB,SAASxE,KAAK0B,MAAMuD,sB,uCAGzBb,GAAU,IAAD,OAGlB1C,EAAQ,CACZqD,SAHa5D,MAAMC,KAAKpB,KAAK0B,MAAMqD,UAClC1D,MAAK,SAAC6E,EAAGC,GAAJ,OAAW,EAAKC,iBAAiBF,EAAGC,EAAG/B,OAI3CpE,KAAKqG,kBACP3E,EAAMuD,mBAAqBb,GAC7BpE,KAAK4F,SAASlE,K,0CAGI0C,GAClB,IAAIpC,EAAYiC,EAAaqC,eAAelC,GAG5C,OAFGpE,KAAKuG,cAAcnC,KACpBpC,GAAa,gBACRA,I,iCAGEX,GACT,IAEMK,EAAQ,CACZqD,SAHa5D,MAAMC,KAAKpB,KAAK0B,MAAMqD,UAClC1D,KAAKA,IAIJrB,KAAKqG,kBACP3E,EAAMuD,wBAAqBP,GAC7B1E,KAAK4F,SAASlE,K,6CAGQ,IAAD,OACrB1B,KAAKwG,YAAW,SAACN,EAAGC,GAAJ,OAAY,EAAE,EAAKM,gBAAgBP,EAAGC,Q,4CAItDnG,KAAKwG,WAAWxG,KAAKyG,mB,oCAGTP,EAAGC,EAAG9F,GAClB,OAAG6F,IAAO7F,GACA,EACF8F,IAAO9F,EACN,EAEAL,KAAKoG,iBAAiBF,EAAGC,EAAG9F,EAAK+D,W,uCAG3B8B,EAAGC,EAAG/B,GACrB,IAEMsC,EAFMC,KAAKC,IAAIV,EAAG9B,QAAUA,GACtBuC,KAAKC,IAAIT,EAAG/B,QAAUA,GAElC,OAAU,IAAPsC,EACM1G,KAAKyG,gBAAgBP,EAAGC,GAExBO,I,sCAGKR,EAAGC,GACjB,OAAGD,EAAGzF,KAAO0F,EAAG1F,MACN,EACFyF,EAAGzF,KAAO0F,EAAG1F,KACZ,EAEA,M,GAxK2BmC,IAAMC,WA4K9C,SAAS2C,EAAiB/D,GACxB,IAAIgE,EAAahE,EAAMgE,WACnBoB,EAAe,SAACZ,GAClB,IAAIjE,EAAYiE,EAAajE,UAG7B,OAFGyD,EAAWqB,mBAAmBb,KAC/BjE,GAAa,gBACRA,GAET,OACE,gCACE,+BACE,0CACA,sCACA,0CACA,wCACA,oBAAI+E,QAAQ,IAAI/E,UAAW6E,EAAa5C,EAAaU,SAArD,SACE,sBACEqC,MAAM,sBACNhF,UAAU,YACVC,QAAS,kBAAMwD,EAAWwB,iBAAiBhD,EAAaU,QAAQuC,eAHlE,wBAMF,oBAAIH,QAAQ,IAAI/E,UAAW6E,EAAa5C,EAAaW,eAArD,SACE,sBACEoC,MAAM,4BACNhF,UAAU,YACVC,QAAS,kBAAMwD,EAAWwB,iBAAiBhD,EAAaW,cAAcsC,eAHxE,8BAMF,oBAAIH,QAAQ,IAAI/E,UAAW6E,EAAa5C,EAAaY,SAArD,SACE,sBACEmC,MAAM,sBACNhF,UAAU,YACVC,QAAS,kBAAMwD,EAAWwB,iBAAiBhD,EAAaY,QAAQqC,eAHlE,6B,IAWJC,E,uKAGF,OACE,6BACE,oBACEJ,QAAQ,KACRK,MAAO,CAACC,UAAW,QAFrB,SAIIrH,KAAKyB,MAAMgE,WAAWY,gBACtBrG,KAAKsH,iBACLtH,KAAKuH,oB,oCAQb,OACE,oH,uCAIc,IAAD,OACf,OACE,wBACEtF,QAAS,kBAAM,EAAKR,MAAMgE,WAAW+B,aADvC,kD,GA1ByB5E,IAAMC,WAiC/B4E,E,uKAGF,IAAIhC,EAAazF,KAAKyB,MAAMgE,WAC5B,OACE,+BACE,qBAAIzD,UAAU,SAAd,qBACE,sBACEgF,MAAM,kCACNhF,UAAU,wBACVC,QAAS,kBAAMwD,EAAWiC,uBAH5B,oBAKA,sBACEV,MAAM,mCACNhF,UAAU,YACVC,QAAS,kBAAMwD,EAAWkC,wBAH5B,uBAMF,oBAAI3F,UAAU,SAAd,kBACA,oBAAIA,UAAU,SAAd,sBACA,oBAAIA,UAAU,SAAd,oBACChC,KAAK4H,yB,0CAQV,IAHmB,IAAD,OACdnC,EAAazF,KAAKyB,MAAMgE,WACxBoC,EAAU1G,MAAM,IAFF,WAGViD,GACNyD,EAAQzD,EAAQ,GACd,wDAAQ,EAAK3C,OAAb,IAAoBqG,IAAK1D,EAASpC,UAAWyD,EAAWsC,oBAAoB3D,KAC1E,sBACE4C,MAAM,0BACNhF,UAAU,YACVC,QAAS,kBAAMwD,EAAWwB,iBAAiB7C,IAH7C,sBAHEA,EAAU,EAAGA,GAAWyD,EAAQ7B,OAAQ5B,IAAY,EAApDA,GAUR,OAAOyD,M,GAvCiBjF,IAAMC,WA2ClC,SAAS6C,EAAcjE,GACrB,IAAIgE,EAAahE,EAAMgE,WASvB,OAAOhE,EAAM8B,MACV3E,KAAI,SAAAmF,GAAC,OAAI,wBAACiE,EAAD,2BAAavG,GAAb,IAAoBpB,KAAM0D,EAAGkE,SAT1B5H,EAS2C0D,EATlC,CACtB,sBACEiD,MAAM,yBACNhF,UAAU,YAEVC,QAAS,kBAAMwD,EAAWyC,OAAO7H,IAJnC,mBAGM,YAKsDyH,IAAK/D,EAAEvE,MATvD,IAACa,KAYjB,SAASsF,EAAiBlE,GACxB,IAAIgE,EAAahE,EAAMgE,WASvB,OAAOhE,EAAM8B,MACR2B,QAAO,SAAAnB,GAAC,OAAK0B,EAAW0C,WAAWpE,IAAMtC,EAAMyD,OAAOnB,MACtDnF,KAAI,SAACmF,GAAD,OAAO,wBAACiE,EAAD,2BAAavG,GAAb,IAAoBpB,KAAM0D,EAAGkE,SAV9B5H,EAU+C0D,EAVtC,CACtB,sBACEiD,MAAM,oBACNhF,UAAU,YAEVC,QAAS,kBAAMwD,EAAW2C,QAAQ/H,IAJpC,mBAGM,SAM0DyH,IAAK/D,EAAEvE,MAV3D,IAACa,KAajB,SAAS2H,EAAQvG,GACf,OACE,+BACE,qBAAIO,UAAU,YAAd,UACGP,EAAMwG,QACP,sBAAMjG,UAAU,cAAhB,SAA+BP,EAAMpB,KAAKI,UAE5C,6BAAKgB,EAAMpB,KAAKF,OAChB,6BAAKsB,EAAMpB,KAAKJ,WAChB,6BAAKwB,EAAMpB,KAAK2F,SAChB,cAAC,EAAD,eAAwBvE,O,IAKxB4G,E,uKAEM,IAAD,OAEP,OADerI,KAAKsI,sBAAsBtI,KAAKyB,MAAMpB,KAAX,SAEjCzB,KAAI,SAAC2J,EAAEvE,GAAH,OAAS,EAAKwE,aAAaxE,EAAE,EAAEuE,Q,mCAIjCnE,EAAQqE,GACnB,IAAIhD,EAAazF,KAAKyB,MAAMgE,WAC5B,OACE,oBAAIzD,UAAWyD,EAAWsC,oBAAoB3D,GAA9C,SACGqE,EAAQzI,KAAK0I,qBAAoB,kBAAMjD,EAAWwB,iBAAiB7C,MAAY,IADrBA,K,0CAM7CnC,GAClB,OACE,sBACED,UAAU,YACVC,QAASA,EAFX,sB,4CAOkBmC,GAEpB,IADA,IAAIuE,EAAS,IAAIxH,MAAM,IACf6C,EAAE,EAAGA,EAAI2E,EAAO3C,OAAQhC,IAC9B2E,EAAO3E,GAAM2C,KAAKC,IAAIxC,GAAWJ,EAAI,KAAO,EAC9C,OAAO2E,M,GA/BsB/F,IAAMC,W,MCnXvC+F,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a17c0d34.chunk.js","sourcesContent":["var map = {\n\t\"./2011.json\": [\n\t\t19,\n\t\t3\n\t],\n\t\"./2012.json\": [\n\t\t20,\n\t\t4\n\t],\n\t\"./2013.json\": [\n\t\t21,\n\t\t5\n\t],\n\t\"./2014.json\": [\n\t\t22,\n\t\t6\n\t],\n\t\"./2017.json\": [\n\t\t23,\n\t\t7\n\t],\n\t\"./2019.json\": [\n\t\t24,\n\t\t8\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 16;\nmodule.exports = webpackAsyncContext;","import React from 'react'\nimport './Filter.css';\n\nexport class FilterState {\n\n  constructor(source) {\n    if(source) {\n      this.diameter = new Set(source.diameter);\n      this.year = new Set(source.year);\n      this.namePrefix = new Set(source.namePrefix);\n    }\n    else {\n      this.diameter = new Set(['SDM', 'RDM']);\n      this.year = new Set([2019]);\n      this.namePrefix = new Set();\n    }\n  }\n\n  static createDefaultOptions() {\n    return {\n      diameter: [],\n      year: [],\n      namePrefix: []\n    };\n  }\n\n  static createOptions(data) {\n    let options = {\n      diameter: new Set(),\n      year: new Set(),\n      namePrefix: new Set()\n    };\n    data.forEach(\n      function(mast) {\n        options.diameter.add(mast.diameter);\n        options.year.add(mast.year);\n        options.namePrefix.add(mast.name.substr(0,1).toUpperCase());\n      }\n    );\n    options = {\n      diameter: Array.from(options.diameter),\n      year: Array.from(options.year),\n      namePrefix: Array.from(options.namePrefix)\n    };\n    options.year.sort((y1,y2) => y2-y1);\n    options.namePrefix.sort();\n    return options;\n  }\n\n  clone() {\n    return new FilterState(this);\n  }\n\n  filter(mast) {\n    return this.filterDiameter(mast.diameter)\n      && this.filterYear(mast.year)\n      && this.filterName(mast.name);\n  }\n\n  filterDiameter(diameter) {\n    return this.diameter.size > 0 ? this.diameter.has(diameter) : true;\n  }\n\n  filterYear(year) {\n    return this.year.size > 0 ? this.year.has(year) : true;\n  }\n\n  filterName(name) {\n    const prefix = name.substr(0,1).toUpperCase();\n    return this.namePrefix.size > 0 ? this.namePrefix.has(prefix) : true;\n  }\n}\n\nexport default class Filter extends React.Component {\n\n  render() {\n    const options = this.props.options;\n    const state = this.props.state;\n    return (\n      <div id=\"filter\">\n        <FilterGroup\n          label=\"Diameter:\"\n          options={options.diameter}\n          state={state.diameter}\n          onChange={e => this.diameterChanged(e)}\n        />\n        <FilterGroup\n          label=\"Year:\"\n          options={options.year}\n          state={state.year}\n          onChange={e => this.yearChanged(e)}\n        />\n        <button className=\"clear\" onClick={e => this.clearYearFilter()}>Clear</button>\n        <NamePrefixGroup\n          options={options.namePrefix}\n          state={state.namePrefix}\n          onChange={e => this.namePrefixChanged(e)}\n        />\n        <button className=\"clear\" onClick={e => this.clearNamePrefixFilter()}>Clear</button>\n      </div>\n    );\n  }\n\n  diameterChanged(event) {\n    const diameter = event.target.id;\n    this.props.onChange(function(state) {\n      if(event.target.checked)\n        state.diameter.add(diameter);\n      else\n        state.diameter.delete(diameter);\n    });\n  }\n\n  yearChanged(event) {\n    const year = parseInt(event.target.id);\n    this.props.onChange(function(state) {\n      if(event.target.checked)\n        state.year.add(year);\n      else\n        state.year.delete(year);\n    });\n  }\n\n  clearYearFilter() {\n    this.props.onChange(function(state) {\n      state.year.clear();\n    });\n  }\n\n  namePrefixChanged(event) {\n    const prefix = event.target.id;\n    this.props.onChange(function(state) {\n      if(state.namePrefix.has(prefix))\n        state.namePrefix.delete(prefix);\n      else\n        state.namePrefix.add(prefix);\n    });\n  }\n\n  clearNamePrefixFilter() {\n    this.props.onChange(function(state) {\n      state.namePrefix.clear();\n    });\n  }\n};\n\nfunction FilterGroup(props) {\n  const items = props.options.map(\n    (o) => (\n      <FilterGroupOption\n        key={o}\n        id={o}\n        checked={props.state.has(o)}\n        onChange={props.onChange}\n      />\n    )\n  );\n  return (\n    <div className=\"group\">\n      <label className=\"group\">{props.label}</label>\n      {items}\n    </div>\n  );\n}\n\nfunction FilterGroupOption(props) {\n  return (\n    <div className=\"block\">\n      <input type=\"checkbox\" {...props} />\n      <label htmlFor={props.id}>{props.id}</label>\n    </div>\n  );\n}\n\nfunction NamePrefixGroup(props) {\n  const options = props.options.map(\n    function(prefix) {\n      return <NamePrefixOption\n        key={prefix} prefix={prefix}\n        state={props.state}\n        onChange={props.onChange}\n      />;\n    });\n  return (\n    <div className=\"group\">\n      <label className=\"group\">Producer:</label>\n      {options}\n    </div>\n  );\n}\n\nfunction NamePrefixOption(props) {\n  const isChecked = props.state.has(props.prefix);\n  let className = 'name-prefix';\n  if(isChecked)\n    className += ' name-prefix-checked';\n  return (\n    <button\n      className={className}\n      id={props.prefix}\n      onClick={props.onChange}\n    >{props.prefix}</button>\n  );\n}\n","export default function loadAll() {\n    return load([2019,2017,2014,2013,2012,2011]);\n}\n\nfunction load(years) {\n  return Promise.all(years.map(y => loadSingle(y)))\n    .then(function(dataPerYear) {\n      const all = merge(dataPerYear);\n      generateIds(all);\n      return all;\n    });\n}\n\nfunction loadSingle(year) {\n  return import('./' + year + '.json')\n    .then(function(module) {\n      setYear(module.default,year);\n      return module.default;\n    });\n}\n\nfunction setYear(masts, year) {\n  masts.forEach(function(mast) {\n    mast.year = year;\n  });\n}\n\nfunction merge(dataPerYear) {\n  return dataPerYear.reduce(\n    (all,yearData) => all.concat(yearData),\n    []\n  );\n}\n\nfunction generateIds(masts) {\n  masts.forEach(function (m,i) { m.id = i; });\n}\n","import React from 'react'\nimport Filter, { FilterState } from './Filter.js';\nimport './Comparator.css';\n\nimport loadMastData from './mast/all.js'\n\nclass ProfileClass {\n\n  constructor(min,max,className) {\n    this.min = min;\n    this.max = max;\n    this.className = className;\n  }\n\n  includes(profile) {\n    return profile >= this.min && profile <= this.max;\n  }\n\n  getTypical() {\n    return (this.min + this.max)/2;\n  }\n\n  static HardTop = new ProfileClass(1,5,'hard-top');\n  static ConstantCurve = new ProfileClass(6,10,'constant-curve');\n  static FlexTop = new ProfileClass(11,15,'flex-top');\n\n  static All = [\n    this.HardTop,\n    this.ConstantCurve,\n    this.FlexTop\n  ];\n\n  static getClassOf(profile) {\n    return this.All.find(cls => cls.includes(profile));\n  }\n\n  static getClassNameOf(profile) {\n    const cls = this.getClassOf(profile);\n    return cls ? cls.className : undefined;\n  }\n}\n\nexport default class Comparator extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      allMasts: [],\n      comparedMasts: [],\n      highlightedProfile: undefined,\n      filter: {\n        state: new FilterState(),\n        options: FilterState.createDefaultOptions()\n      }\n    };\n    loadMastData().then(data => {\n      this.setMastData(data);\n      return data;\n    });\n  }\n\n  render() {\n    return (\n      <div id=\"comparator\">\n        <Filter\n          state={this.state.filter.state}\n          options={this.state.filter.options}\n          onChange={c => this.filterChanged(c)}\n        />\n        <table>\n          <ComparatorHeader comparator={this} />\n          <tbody>\n            <ComparedMasts masts={this.state.comparedMasts} comparator={this}/>\n            <ComparatorFooter comparator={this}/>\n            <SortingHeader comparator={this}/>\n            <NotComparedMasts\n              masts={this.state.allMasts}\n              filter={m => this.state.filter.state.filter(m)}\n              comparator={this}\n            />\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n\n  setMastData(data) {\n    this.setState({\n      allMasts: data,\n      filter: {\n        state: this.state.filter.state,\n        options: FilterState.createOptions(data)\n      }\n    });\n  }\n\n  filterChanged(change) {\n    const state = this.state.filter.state.clone();\n    change(state);\n    this.setState({\n      filter: {\n        state: state,\n        options: this.state.filter.options\n      }\n    });\n  }\n\n  compare(mast) {\n    let change = {\n      comparedMasts: this.state.comparedMasts.concat([mast])\n    };\n    change.highlightedProfile = change.comparedMasts[0].profile;\n    this.setState(change);\n  }\n\n  remove(mast) {\n    let change = {\n      comparedMasts: this.state.comparedMasts.filter(m => m !== mast)\n    };\n    change.highlightedProfile = change.comparedMasts.length > 0 ?\n      change.comparedMasts[0].profile :\n      undefined;\n    this.setState(change);\n  }\n\n  removeAll() {\n    this.setState({\n      comparedMasts: [],\n      highlightedProfile: undefined\n    });\n  }\n\n  isCompared(mast) {\n    return this.state.comparedMasts.includes(mast);\n  }\n\n  isAnyCompared() {\n    return this.state.comparedMasts.length > 0;\n  }\n\n  isHighlighted(profile) {\n    return this.state.highlightedProfile === profile;\n  }\n    \n  isHighlightedClass(profileClass) {\n    return profileClass.includes(this.state.highlightedProfile);\n  }\n    \n  sortProfileFirst(profile) {\n    const sorted = Array.from(this.state.allMasts)\n      .sort((m1,m2) => this.compareToProfile(m1,m2,profile));\n    const state = {\n      allMasts: sorted\n    };\n    if(!this.isAnyCompared())\n      state.highlightedProfile = profile;\n    this.setState(state);\n  }\n\n  getProfileClassName(profile) {\n    let className = ProfileClass.getClassNameOf(profile);\n    if(this.isHighlighted(profile))\n      className += \" highlighted\";\n    return className;\n  }\n\n  sortByName(sort) {\n    const sorted = Array.from(this.state.allMasts)\n      .sort(sort);\n    const state = {\n      allMasts: sorted\n    };\n    if(!this.isAnyCompared())\n      state.highlightedProfile = undefined;\n    this.setState(state);\n  }\n\n  sortByNameDescending() {\n    this.sortByName((m1,m2) => -1*this.compareMastName(m1,m2));\n  }\n\n  sortByNameAscending() {\n    this.sortByName(this.compareMastName);\n  }\n\n  compareToMast(m1,m2,mast) {\n    if(m1 === mast)\n      return -1;\n    else if(m2 === mast)\n      return 1;\n    else\n      return this.compareToProfile(m1,m2,mast.profile);\n  }\n\n  compareToProfile(m1,m2,profile) {\n    const dp1 = Math.abs(m1.profile - profile);\n    const dp2 = Math.abs(m2.profile - profile);\n    const dp = dp1 - dp2;\n    if(dp === 0)\n      return this.compareMastName(m1,m2);\n    else\n      return dp;\n  }\n  \n  compareMastName(m1,m2) {\n    if(m1.name < m2.name)\n      return -1;\n    else if(m1.name > m2.name)\n      return 1;\n    else\n      return 0;\n  }\n};\n \nfunction ComparatorHeader(props) {\n  let comparator = props.comparator;\n  let getClassName = (profileClass) => {\n    let className = profileClass.className;\n    if(comparator.isHighlightedClass(profileClass))\n      className += \" highlighted\";\n    return className;\n  };\n  return (\n    <thead>\n      <tr>\n        <th>Producer</th>\n        <th>Year</th>\n        <th>Diameter</th>\n        <th>Length</th>\n        <th colSpan=\"5\" className={getClassName(ProfileClass.HardTop)}>\n          <span\n            title=\"Sort hard top first\"\n            className=\"clickable\"\n            onClick={() => comparator.sortProfileFirst(ProfileClass.HardTop.getTypical())}\n          >Hard top</span>\n        </th>\n        <th colSpan=\"5\" className={getClassName(ProfileClass.ConstantCurve)}>\n          <span\n            title=\"Sort constant curve first\"\n            className=\"clickable\"\n            onClick={() => comparator.sortProfileFirst(ProfileClass.ConstantCurve.getTypical())}\n          >Constant curve</span>\n        </th>\n        <th colSpan=\"5\" className={getClassName(ProfileClass.FlexTop)}>\n          <span\n            title=\"Sort flex top first\"\n            className=\"clickable\"\n            onClick={() => comparator.sortProfileFirst(ProfileClass.FlexTop.getTypical())}\n          >Flex Top</span>\n        </th>\n      </tr>\n    </thead>\n  );\n}\n\nclass ComparatorFooter extends React.Component {\n\n  render() {\n    return (\n      <tr>\n        <td\n          colSpan=\"19\"\n          style={{textAlign: 'left'}}\n        >\n          { this.props.comparator.isAnyCompared() ?\n            this.renderNonEmpty() :\n            this.renderEmpty()\n          }\n        </td>\n      </tr>\n    );\n  }\n\n  renderEmpty() {\n    return (\n      <span>Use the ✚ icon next to a producer name to add the mast to the comparison.</span>\n    );\n  }\n\n  renderNonEmpty() {\n    return (\n      <button \n        onClick={() => this.props.comparator.removeAll()}\n      >Remove all compared masts above.</button>\n    );\n  }\n};\n\nclass SortingHeader extends React.Component {\n  \n  render() {\n    let comparator = this.props.comparator;\n    return (\n      <tr>\n        <td className=\"header\">Producer\n          <span\n            title=\"Sort ascending by producer name\"\n            className=\"clickable left-padded\"\n            onClick={() => comparator.sortByNameAscending()}\n          >&#x25b2;</span>\n          <span\n            title=\"Sort descending by producer name\"\n            className=\"clickable\"\n            onClick={() => comparator.sortByNameDescending()}\n          >&#x25bc;</span>\n        </td>\n        <td className=\"header\">Year</td>\n        <td className=\"header\">Diameter</td>\n        <td className=\"header\">Length</td>\n        {this.getProfileColumns()}\n      </tr>\n    );\n  }\n\n  getProfileColumns() {\n    let comparator = this.props.comparator;\n    let columns = Array(15);\n    for(let profile = 1; profile <= columns.length; profile++) {\n      columns[profile-1] =\n        <td {...this.props} key={profile} className={comparator.getProfileClassName(profile)}>\n          <span\n            title=\"Sort this profile first\"\n            className=\"clickable\"\n            onClick={() => comparator.sortProfileFirst(profile)}\n          >&#x25bc;</span>\n        </td>;\n    }\n    return columns;\n  }\n};\n\nfunction ComparedMasts(props) {\n  let comparator = props.comparator;\n  let buttons = (mast) => [\n    <span\n      title=\"Remove from comparison\"\n      className=\"clickable\"\n      key=\"remove\"\n      onClick={() => comparator.remove(mast)}\n    >✖</span>\n  ];\n  return props.masts\n    .map(m => <MastRow {...props} mast={m} buttons={buttons(m)} key={m.id}/>);\n}\n\nfunction NotComparedMasts(props) {\n  let comparator = props.comparator;\n  let buttons = (mast) => [\n    <span\n      title=\"Add to comparison\"\n      className=\"clickable\"\n      key=\"add\"\n      onClick={() => comparator.compare(mast)}\n    >✚</span>\n  ];\n  return props.masts\n      .filter(m => !comparator.isCompared(m) && props.filter(m))\n      .map((m) => <MastRow {...props} mast={m} buttons={buttons(m)} key={m.id}/>);\n}\n\nfunction MastRow(props) {\n  return (\n    <tr>\n      <td className=\"mast-name\">\n        {props.buttons}\n        <span className=\"left-padded\">{props.mast.name}</span>\n      </td>\n      <td>{props.mast.year}</td>\n      <td>{props.mast.diameter}</td>\n      <td>{props.mast.length}</td>\n      <ProfileDataColumns {...props}/>\n    </tr>\n  );\n}\n\nclass ProfileDataColumns extends React.Component {\n\n  render() {\n    const values = this.calculateColumnValues(this.props.mast['profile']);\n    return (\n      values.map((v,i) => this.renderColumn(i+1,v))\n    );\n  }\n\n  renderColumn(profile,value) {\n    let comparator = this.props.comparator;\n    return (\n      <td className={comparator.getProfileClassName(profile)} key={profile}>\n        {value ? this.renderClickableMark(() => comparator.sortProfileFirst(profile)) : ''}\n      </td>\n    );\n  }\n\n  renderClickableMark(onClick) {\n    return (\n      <span\n        className=\"clickable\"\n        onClick={onClick}\n      >●</span>\n    );\n  }\n\n  calculateColumnValues(profile) {\n    var values = new Array(15);\n    for(let i=0; i < values.length; i++)\n      values[i] = (Math.abs(profile - (i + 1)) <= 1);\n    return values;\n  }\n};\n","import ReactDOM from 'react-dom';\nimport Comparator from './Comparator';\nimport './index.css';\n\nReactDOM.render(\n    <Comparator />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}