{"version":3,"sources":["mast lazy /^/.//.*/.json$/ groupOptions: {} namespace object","Filter.js","mast/all.js","Comparator.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","FilterState","source","this","size","Set","year","namePrefix","mast","filterSize","filterYear","filterName","name","has","prefix","substr","toUpperCase","data","options","forEach","add","Array","from","sort","y1","y2","Filter","props","state","FilterGroup","label","onChange","sizeChanged","yearChanged","NamePrefixGroup","namePrefixChanged","event","target","checked","delete","parseInt","React","Component","items","FilterGroupOption","className","type","htmlFor","NamePrefixOption","onClick","loadAll","years","all","y","masts","setYear","default","dataPerYear","reduce","yearData","concat","merge","m","i","ProfileClass","min","max","profile","All","find","cls","includes","getClassOf","undefined","HardTop","ConstantCurve","FlexTop","Comparator","allMasts","comparedMasts","highlightedProfile","filter","createDefaultOptions","loadMastData","setMastData","c","filterChanged","ComparatorHeader","comparator","ComparedMasts","NotComparedMasts","setState","createOptions","change","clone","length","profileClass","m1","m2","compareToProfile","isAnyCompared","getClassNameOf","isHighlighted","sortByName","compareMastName","dp","Math","abs","getClassName","isHighlightedClass","colSpan","title","sortProfileFirst","getTypical","ComparatorFooter","style","textAlign","renderNonEmpty","renderEmpty","removeAll","SortingHeader","sortByNameAscending","sortByNameDescending","getProfileColumns","columns","key","getProfileClassName","MastRow","buttons","remove","isCompared","compare","ProfileDataColumns","calculateColumnValues","v","renderColumn","value","renderClickableMark","values","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.79fbdc42.chunk.js","sourcesContent":["var map = {\n\t\"./2011.json\": [\n\t\t19,\n\t\t3\n\t],\n\t\"./2012.json\": [\n\t\t20,\n\t\t4\n\t],\n\t\"./2013.json\": [\n\t\t21,\n\t\t5\n\t],\n\t\"./2014.json\": [\n\t\t22,\n\t\t6\n\t],\n\t\"./2017.json\": [\n\t\t23,\n\t\t7\n\t],\n\t\"./2019.json\": [\n\t\t24,\n\t\t8\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 16;\nmodule.exports = webpackAsyncContext;","import React from 'react'\nimport './Filter.css';\n\nexport class FilterState {\n\n  constructor(source) {\n    if(source) {\n      this.size = new Set(source.size);\n      this.year = new Set(source.year);\n      this.namePrefix = new Set(source.namePrefix);\n    }\n    else {\n      this.size = new Set(['SDM', 'RDM']);\n      this.year = new Set([2019]);\n      this.namePrefix = new Set();\n    }\n  }\n\n  static createDefaultOptions() {\n    return {\n      size: [],\n      year: [],\n      namePrefix: []\n    };\n  }\n\n  static createOptions(data) {\n    let options = {\n      size: new Set(),\n      year: new Set(),\n      namePrefix: new Set()\n    };\n    data.forEach(\n      function(mast) {\n        options.size.add(mast.size);\n        options.year.add(mast.year);\n        options.namePrefix.add(mast.name.substr(0,1).toUpperCase());\n      }\n    );\n    options = {\n      size: Array.from(options.size),\n      year: Array.from(options.year),\n      namePrefix: Array.from(options.namePrefix)\n    };\n    options.year.sort((y1,y2) => y2-y1);\n    options.namePrefix.sort();\n    return options;\n  }\n\n  clone() {\n    return new FilterState(this);\n  }\n\n  filter(mast) {\n    return this.filterSize(mast.size)\n      && this.filterYear(mast.year)\n      && this.filterName(mast.name);\n  }\n\n  filterSize(size) {\n    return this.size.size > 0 ? this.size.has(size) : true;\n  }\n\n  filterYear(year) {\n    return this.year.size > 0 ? this.year.has(year) : true;\n  }\n\n  filterName(name) {\n    const prefix = name.substr(0,1).toUpperCase();\n    return this.namePrefix.size > 0 ? this.namePrefix.has(prefix) : true;\n  }\n}\n\nexport default class Filter extends React.Component {\n\n  render() {\n    const options = this.props.options;\n    const state = this.props.state;\n    return (\n      <div id=\"filter\">\n        <FilterGroup\n          label=\"Size:\"\n          options={options.size}\n          state={state.size}\n          onChange={e => this.sizeChanged(e)}\n        />\n        <FilterGroup\n          label=\"Year:\"\n          options={options.year}\n          state={state.year}\n          onChange={e => this.yearChanged(e)}\n        />\n        <NamePrefixGroup\n          options={options.namePrefix}\n          state={state.namePrefix}\n          onChange={e => this.namePrefixChanged(e)}\n        />\n      </div>\n    );\n  }\n\n  sizeChanged(event) {\n    const size = event.target.id;\n    this.props.onChange(function(state) {\n      if(event.target.checked)\n        state.size.add(size);\n      else\n        state.size.delete(size);\n    });\n  }\n\n  yearChanged(event) {\n    const year = parseInt(event.target.id);\n    this.props.onChange(function(state) {\n      if(event.target.checked)\n        state.year.add(year);\n      else\n        state.year.delete(year);\n    });\n  }\n\n  namePrefixChanged(event) {\n    const prefix = event.target.id;\n    this.props.onChange(function(state) {\n      if(state.namePrefix.has(prefix))\n        state.namePrefix.delete(prefix);\n      else\n        state.namePrefix.add(prefix);\n    });\n  }\n};\n\nfunction FilterGroup(props) {\n  const items = props.options.map(\n    (o) => (\n      <FilterGroupOption\n        key={o}\n        id={o}\n        checked={props.state.has(o)}\n        onChange={props.onChange}\n      />\n    )\n  );\n  return (\n    <div>\n      <label className=\"group\">{props.label}</label>\n      {items}\n    </div>\n  );\n}\n\nfunction FilterGroupOption(props) {\n  return (\n    <div className=\"block\">\n      <input type=\"checkbox\" {...props} />\n      <label htmlFor={props.id}>{props.id}</label>\n    </div>\n  );\n}\n\nfunction NamePrefixGroup(props) {\n  const options = props.options.map(\n    function(prefix) {\n      return <NamePrefixOption\n        key={prefix} prefix={prefix}\n        state={props.state}\n        onChange={props.onChange}\n      />;\n    });\n  return (\n    <div>\n      <label className=\"group\">Producer:</label>\n      {options}\n    </div>\n  );\n}\n\nfunction NamePrefixOption(props) {\n  const isChecked = props.state.has(props.prefix);\n  let className = 'name-prefix';\n  if(isChecked)\n    className += ' name-prefix-checked';\n  return (\n    <button\n      className={className}\n      id={props.prefix}\n      onClick={props.onChange}\n    >{props.prefix}</button>\n  );\n}\n","export default function loadAll() {\n    return load([2019,2017,2014,2013,2012,2011]);\n}\n\nfunction load(years) {\n  return Promise.all(years.map(y => loadSingle(y)))\n    .then(function(dataPerYear) {\n      const all = merge(dataPerYear);\n      generateIds(all);\n      return all;\n    });\n}\n\nfunction loadSingle(year) {\n  return import('./' + year + '.json')\n    .then(function(module) {\n      setYear(module.default,year);\n      return module.default;\n    });\n}\n\nfunction setYear(masts, year) {\n  masts.forEach(function(mast) {\n    mast.year = year;\n  });\n}\n\nfunction merge(dataPerYear) {\n  return dataPerYear.reduce(\n    (all,yearData) => all.concat(yearData),\n    []\n  );\n}\n\nfunction generateIds(masts) {\n  masts.forEach(function (m,i) { m.id = i; });\n}\n","import React from 'react'\nimport Filter, { FilterState } from './Filter.js';\nimport './Comparator.css';\n\nimport loadMastData from './mast/all.js'\n\nclass ProfileClass {\n\n  constructor(min,max,className) {\n    this.min = min;\n    this.max = max;\n    this.className = className;\n  }\n\n  includes(profile) {\n    return profile >= this.min && profile <= this.max;\n  }\n\n  getTypical() {\n    return (this.min + this.max)/2;\n  }\n\n  static HardTop = new ProfileClass(1,5,'hard-top');\n  static ConstantCurve = new ProfileClass(6,10,'constant-curve');\n  static FlexTop = new ProfileClass(11,15,'flex-top');\n\n  static All = [\n    this.HardTop,\n    this.ConstantCurve,\n    this.FlexTop\n  ];\n\n  static getClassOf(profile) {\n    return this.All.find(cls => cls.includes(profile));\n  }\n\n  static getClassNameOf(profile) {\n    const cls = this.getClassOf(profile);\n    return cls ? cls.className : undefined;\n  }\n}\n\nexport default class Comparator extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      allMasts: [],\n      comparedMasts: [],\n      highlightedProfile: undefined,\n      filter: {\n        state: new FilterState(),\n        options: FilterState.createDefaultOptions()\n      }\n    };\n    loadMastData().then(data => {\n      this.setMastData(data);\n      return data;\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Filter\n          state={this.state.filter.state}\n          options={this.state.filter.options}\n          onChange={c => this.filterChanged(c)}\n        />\n        <table>\n          <ComparatorHeader comparator={this} />\n          <tbody>\n            <ComparedMasts masts={this.state.comparedMasts} comparator={this}/>\n            <ComparatorFooter comparator={this}/>\n            <SortingHeader comparator={this}/>\n            <NotComparedMasts\n              masts={this.state.allMasts}\n              filter={m => this.state.filter.state.filter(m)}\n              comparator={this}\n            />\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n\n  setMastData(data) {\n    this.setState({\n      allMasts: data,\n      filter: {\n        state: this.state.filter.state,\n        options: FilterState.createOptions(data)\n      }\n    });\n  }\n\n  filterChanged(change) {\n    const state = this.state.filter.state.clone();\n    change(state);\n    this.setState({\n      filter: {\n        state: state,\n        options: this.state.filter.options\n      }\n    });\n  }\n\n  compare(mast) {\n    let change = {\n      comparedMasts: this.state.comparedMasts.concat([mast])\n    };\n    change.highlightedProfile = change.comparedMasts[0].profile;\n    this.setState(change);\n  }\n\n  remove(mast) {\n    let change = {\n      comparedMasts: this.state.comparedMasts.filter(m => m !== mast)\n    };\n    change.highlightedProfile = change.comparedMasts.length > 0 ?\n      change.comparedMasts[0].profile :\n      undefined;\n    this.setState(change);\n  }\n\n  removeAll() {\n    this.setState({\n      comparedMasts: [],\n      highlightedProfile: undefined\n    });\n  }\n\n  isCompared(mast) {\n    return this.state.comparedMasts.includes(mast);\n  }\n\n  isAnyCompared() {\n    return this.state.comparedMasts.length > 0;\n  }\n\n  isHighlighted(profile) {\n    return this.state.highlightedProfile === profile;\n  }\n    \n  isHighlightedClass(profileClass) {\n    return profileClass.includes(this.state.highlightedProfile);\n  }\n    \n  sortProfileFirst(profile) {\n    const sorted = Array.from(this.state.allMasts)\n      .sort((m1,m2) => this.compareToProfile(m1,m2,profile));\n    const state = {\n      allMasts: sorted\n    };\n    if(!this.isAnyCompared())\n      state.highlightedProfile = profile;\n    this.setState(state);\n  }\n\n  getProfileClassName(profile) {\n    let className = ProfileClass.getClassNameOf(profile);\n    if(this.isHighlighted(profile))\n      className += \" highlighted\";\n    return className;\n  }\n\n  sortByName(sort) {\n    const sorted = Array.from(this.state.allMasts)\n      .sort(sort);\n    const state = {\n      allMasts: sorted\n    };\n    if(!this.isAnyCompared())\n      state.highlightedProfile = undefined;\n    this.setState(state);\n  }\n\n  sortByNameDescending() {\n    this.sortByName((m1,m2) => -1*this.compareMastName(m1,m2));\n  }\n\n  sortByNameAscending() {\n    this.sortByName(this.compareMastName);\n  }\n\n  compareToMast(m1,m2,mast) {\n    if(m1 === mast)\n      return -1;\n    else if(m2 === mast)\n      return 1;\n    else\n      return this.compareToProfile(m1,m2,mast.profile);\n  }\n\n  compareToProfile(m1,m2,profile) {\n    const dp1 = Math.abs(m1.profile - profile);\n    const dp2 = Math.abs(m2.profile - profile);\n    const dp = dp1 - dp2;\n    if(dp === 0)\n      return this.compareMastName(m1,m2);\n    else\n      return dp;\n  }\n  \n  compareMastName(m1,m2) {\n    if(m1.name < m2.name)\n      return -1;\n    else if(m1.name > m2.name)\n      return 1;\n    else\n      return 0;\n  }\n};\n \nfunction ComparatorHeader(props) {\n  let comparator = props.comparator;\n  let getClassName = (profileClass) => {\n    let className = profileClass.className;\n    if(comparator.isHighlightedClass(profileClass))\n      className += \" highlighted\";\n    return className;\n  };\n  return (\n    <thead>\n      <tr>\n        <th>Producer</th>\n        <th>Year</th>\n        <th>Size</th>\n        <th>Length</th>\n        <th colSpan=\"5\" className={getClassName(ProfileClass.HardTop)}>\n          <span\n            title=\"Sort hard top first\"\n            className=\"clickable\"\n            onClick={() => comparator.sortProfileFirst(ProfileClass.HardTop.getTypical())}\n          >Hard top</span>\n        </th>\n        <th colSpan=\"5\" className={getClassName(ProfileClass.ConstantCurve)}>\n          <span\n            title=\"Sort constant curve first\"\n            className=\"clickable\"\n            onClick={() => comparator.sortProfileFirst(ProfileClass.ConstantCurve.getTypical())}\n          >Constant curve</span>\n        </th>\n        <th colSpan=\"5\" className={getClassName(ProfileClass.FlexTop)}>\n          <span\n            title=\"Sort flex top first\"\n            className=\"clickable\"\n            onClick={() => comparator.sortProfileFirst(ProfileClass.FlexTop.getTypical())}\n          >Flex Top</span>\n        </th>\n      </tr>\n    </thead>\n  );\n}\n\nclass ComparatorFooter extends React.Component {\n\n  render() {\n    return (\n      <tr>\n        <td\n          colSpan=\"19\"\n          style={{textAlign: 'left'}}\n        >\n          { this.props.comparator.isAnyCompared() ?\n            this.renderNonEmpty() :\n            this.renderEmpty()\n          }\n        </td>\n      </tr>\n    );\n  }\n\n  renderEmpty() {\n    return (\n      <span>Use the ✚ icon next to a producer name to add the mast to the comparison.</span>\n    );\n  }\n\n  renderNonEmpty() {\n    return (\n      <button \n        onClick={() => this.props.comparator.removeAll()}\n      >Remove all compared masts above.</button>\n    );\n  }\n};\n\nclass SortingHeader extends React.Component {\n  \n  render() {\n    let comparator = this.props.comparator;\n    return (\n      <tr>\n        <td className=\"header\">Producer\n          <span\n            title=\"Sort ascending by producer name\"\n            className=\"clickable left-padded\"\n            onClick={() => comparator.sortByNameAscending()}\n          >&#x25b2;</span>\n          <span\n            title=\"Sort descending by producer name\"\n            className=\"clickable\"\n            onClick={() => comparator.sortByNameDescending()}\n          >&#x25bc;</span>\n        </td>\n        <td className=\"header\">Year</td>\n        <td className=\"header\">Size</td>\n        <td className=\"header\">Length</td>\n        {this.getProfileColumns()}\n      </tr>\n    );\n  }\n\n  getProfileColumns() {\n    let comparator = this.props.comparator;\n    let columns = Array(15);\n    for(let profile = 1; profile <= columns.length; profile++) {\n      columns[profile-1] =\n        <td {...this.props} key={profile} className={comparator.getProfileClassName(profile)}>\n          <span\n            title=\"Sort this profile first\"\n            className=\"clickable\"\n            onClick={() => comparator.sortProfileFirst(profile)}\n          >&#x25bc;</span>\n        </td>;\n    }\n    return columns;\n  }\n};\n\nfunction ComparedMasts(props) {\n  let comparator = props.comparator;\n  let buttons = (mast) => [\n    <span\n      title=\"Remove from comparison\"\n      className=\"clickable\"\n      key=\"remove\"\n      onClick={() => comparator.remove(mast)}\n    >✖</span>\n  ];\n  return props.masts\n    .map(m => <MastRow {...props} mast={m} buttons={buttons(m)} key={m.id}/>);\n}\n\nfunction NotComparedMasts(props) {\n  let comparator = props.comparator;\n  let buttons = (mast) => [\n    <span\n      title=\"Add to comparison\"\n      className=\"clickable\"\n      key=\"add\"\n      onClick={() => comparator.compare(mast)}\n    >✚</span>\n  ];\n  return props.masts\n      .filter(m => !comparator.isCompared(m) && props.filter(m))\n      .map((m) => <MastRow {...props} mast={m} buttons={buttons(m)} key={m.id}/>);\n}\n\nfunction MastRow(props) {\n  return (\n    <tr>\n      <td className=\"mast-name\">\n        {props.buttons}\n        <span className=\"left-padded\">{props.mast.name}</span>\n      </td>\n      <td>{props.mast.year}</td>\n      <td>{props.mast.size}</td>\n      <td>{props.mast.length}</td>\n      <ProfileDataColumns {...props}/>\n    </tr>\n  );\n}\n\nclass ProfileDataColumns extends React.Component {\n\n  render() {\n    const values = this.calculateColumnValues(this.props.mast['profile']);\n    return (\n      values.map((v,i) => this.renderColumn(i+1,v))\n    );\n  }\n\n  renderColumn(profile,value) {\n    let comparator = this.props.comparator;\n    return (\n      <td className={comparator.getProfileClassName(profile)} key={profile}>\n        {value ? this.renderClickableMark(() => comparator.sortProfileFirst(profile)) : ''}\n      </td>\n    );\n  }\n\n  renderClickableMark(onClick) {\n    return (\n      <span\n        className=\"clickable\"\n        onClick={onClick}\n      >●</span>\n    );\n  }\n\n  calculateColumnValues(profile) {\n    var values = new Array(15);\n    for(let i=0; i < values.length; i++)\n      values[i] = (Math.abs(profile - (i + 1)) <= 1);\n    return values;\n  }\n};\n","import ReactDOM from 'react-dom';\nimport Comparator from './Comparator';\nimport './index.css';\n\nReactDOM.render(\n    <Comparator />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}