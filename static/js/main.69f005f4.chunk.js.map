{"version":3,"sources":["mast lazy /^/.//.*/.json$/ groupOptions: {} namespace object","Filter.js","mast/all.js","Comparator.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","FilterState","source","this","size","Set","year","mast","filterSize","filterYear","has","data","years","reduce","all","add","sizes","Array","from","Filter","options","props","state","FilterGroup","label","onChange","sizeChanged","yearChanged","event","target","checked","delete","optionChanged","parseInt","React","Component","items","FilterGroupOption","className","type","htmlFor","loadAll","y","masts","forEach","setYear","default","dataPerYear","yearData","concat","merge","m","i","ProfileClass","min","max","profile","All","find","cls","includes","getClassOf","undefined","HardTop","ConstantCurve","FlexTop","Comparator","allMasts","comparedMasts","highlightedProfile","filter","createDefaultOptions","loadMastData","setMastData","c","filterChanged","ComparatorHeader","comparator","ComparedMasts","NotComparedMasts","setState","createOptions","change","clone","length","profileClass","sort","m1","m2","compareToProfile","isAnyCompared","getClassNameOf","isHighlighted","sortByName","compareMastName","dp","Math","abs","name","getClassName","isHighlightedClass","colSpan","title","onClick","sortProfileFirst","getTypical","ComparatorFooter","style","textAlign","renderNonEmpty","renderEmpty","removeAll","SortingHeader","sortByNameAscending","sortByNameDescending","getProfileColumns","columns","key","getProfileClassName","MastRow","buttons","remove","isCompared","compare","ProfileDataColumns","calculateColumnValues","v","renderColumn","value","renderClickableMark","values","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.69f005f4.chunk.js","sourcesContent":["var map = {\n\t\"./2011.json\": [\n\t\t19,\n\t\t3\n\t],\n\t\"./2012.json\": [\n\t\t20,\n\t\t4\n\t],\n\t\"./2013.json\": [\n\t\t21,\n\t\t5\n\t],\n\t\"./2014.json\": [\n\t\t22,\n\t\t6\n\t],\n\t\"./2017.json\": [\n\t\t23,\n\t\t7\n\t],\n\t\"./2019.json\": [\n\t\t24,\n\t\t8\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 16;\nmodule.exports = webpackAsyncContext;","import React from 'react'\nimport './Filter.css';\n\nexport class FilterState {\n\n  constructor(source) {\n    if(source) {\n      this.size = new Set(source.size);\n      this.year = new Set(source.year);\n    }\n    else {\n      this.size = new Set(['SDM', 'RDM']);\n      this.year = new Set([2019]);\n    }\n  }\n\n  static createDefaultOptions() {\n    return {\n      size: [],\n      year: []\n    };\n  }\n\n  static createOptions(data) {\n    const years = data.reduce(\n      (all,mast) => all.add(mast.year),\n      new Set()\n    );\n    const sizes = data.reduce(\n      (all,mast) => all.add(mast.size),\n      new Set()\n    );\n    return {\n      size: Array.from(sizes),\n      year: Array.from(years)\n    };\n  }\n\n  clone() {\n    return new FilterState(this);\n  }\n\n  filter(mast) {\n    return this.filterSize(mast.size)\n      && this.filterYear(mast.year);\n  }\n\n  filterSize(size) {\n    return this.size.size > 0 ? this.size.has(size) : true;\n  }\n\n  filterYear(year) {\n    return this.year.size > 0 ? this.year.has(year) : true;\n  }\n}\n\nexport default class Filter extends React.Component {\n\n  render() {\n    const options = this.props.options;\n    const state = this.props.state;\n    return (\n      <div id=\"filter\">\n        <FilterGroup\n          label=\"Size:\"\n          options={options.size}\n          state={state.size}\n          onChange={e => this.sizeChanged(e)}\n        />\n        <FilterGroup\n          label=\"Year:\"\n          options={options.year}\n          state={state.year}\n          onChange={e => this.yearChanged(e)}\n        />\n      </div>\n    );\n  }\n\n  optionChanged(event, state) {\n    if(event.target.checked)\n      state.add(event.target.id);\n    else\n      state.delete(event.target.id);\n  }\n  \n  sizeChanged(event) {\n    this.props.onChange(\n      state => this.optionChanged(event, state.size)\n    );\n  }\n\n  yearChanged(event) {\n    const year = parseInt(event.target.id);\n    this.props.onChange(function(state) {\n      if(event.target.checked)\n        state.year.add(year);\n      else\n        state.year.delete(year);\n    });\n  }\n};\n\nfunction FilterGroup(props) {\n  const items = props.options.map(\n    (o) => (\n      <FilterGroupOption\n        key={o}\n        id={o}\n        checked={props.state.has(o)}\n        onChange={props.onChange}\n      />\n    )\n  );\n  return (\n    <div>\n      <label className=\"group\">{props.label}</label>\n      {items}\n    </div>\n  );\n}\n\nfunction FilterGroupOption(props) {\n  return (\n    <div className=\"block\">\n      <input type=\"checkbox\" {...props} />\n      <label htmlFor={props.id}>{props.id}</label>\n    </div>\n  );\n}","export default function loadAll() {\n    return load([2019,2017,2014,2013,2012,2011]);\n}\n\nfunction load(years) {\n  return Promise.all(years.map(y => loadSingle(y)))\n    .then(function(dataPerYear) {\n      const all = merge(dataPerYear);\n      generateIds(all);\n      return all;\n    });\n}\n\nfunction loadSingle(year) {\n  return import('./' + year + '.json')\n    .then(function(module) {\n      setYear(module.default,year);\n      return module.default;\n    });\n}\n\nfunction setYear(masts, year) {\n  masts.forEach(function(mast) {\n    mast.year = year;\n  });\n}\n\nfunction merge(dataPerYear) {\n  return dataPerYear.reduce(\n    (all,yearData) => all.concat(yearData),\n    []\n  );\n}\n\nfunction generateIds(masts) {\n  masts.forEach(function (m,i) { m.id = i; });\n}\n","import React from 'react'\nimport Filter, { FilterState } from './Filter.js';\nimport './Comparator.css';\n\nimport loadMastData from './mast/all.js'\n\nclass ProfileClass {\n\n  constructor(min,max,className) {\n    this.min = min;\n    this.max = max;\n    this.className = className;\n  }\n\n  includes(profile) {\n    return profile >= this.min && profile <= this.max;\n  }\n\n  getTypical() {\n    return (this.min + this.max)/2;\n  }\n\n  static HardTop = new ProfileClass(1,5,'hard-top');\n  static ConstantCurve = new ProfileClass(6,10,'constant-curve');\n  static FlexTop = new ProfileClass(11,15,'flex-top');\n\n  static All = [\n    this.HardTop,\n    this.ConstantCurve,\n    this.FlexTop\n  ];\n\n  static getClassOf(profile) {\n    return this.All.find(cls => cls.includes(profile));\n  }\n\n  static getClassNameOf(profile) {\n    const cls = this.getClassOf(profile);\n    return cls ? cls.className : undefined;\n  }\n}\n\nexport default class Comparator extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      allMasts: [],\n      comparedMasts: [],\n      highlightedProfile: undefined,\n      filter: {\n        state: new FilterState(),\n        options: FilterState.createDefaultOptions()\n      }\n    };\n    loadMastData().then(data => {\n      this.setMastData(data);\n      return data;\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Filter\n          state={this.state.filter.state}\n          options={this.state.filter.options}\n          onChange={c => this.filterChanged(c)}\n        />\n        <table>\n          <ComparatorHeader comparator={this} />\n          <tbody>\n            <ComparedMasts masts={this.state.comparedMasts} comparator={this}/>\n            <ComparatorFooter comparator={this}/>\n            <SortingHeader comparator={this}/>\n            <NotComparedMasts\n              masts={this.state.allMasts}\n              filter={m => this.state.filter.state.filter(m)}\n              comparator={this}\n            />\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n\n  setMastData(data) {\n    this.setState({\n      allMasts: data,\n      filter: {\n        state: this.state.filter.state,\n        options: FilterState.createOptions(data)\n      }\n    });\n  }\n\n  filterChanged(change) {\n    const state = this.state.filter.state.clone();\n    change(state);\n    this.setState({\n      filter: {\n        state: state,\n        options: this.state.filter.options\n      }\n    });\n  }\n\n  compare(mast) {\n    let change = {\n      comparedMasts: this.state.comparedMasts.concat([mast])\n    };\n    change.highlightedProfile = change.comparedMasts[0].profile;\n    this.setState(change);\n  }\n\n  remove(mast) {\n    let change = {\n      comparedMasts: this.state.comparedMasts.filter(m => m !== mast)\n    };\n    change.highlightedProfile = change.comparedMasts.length > 0 ?\n      change.comparedMasts[0].profile :\n      undefined;\n    this.setState(change);\n  }\n\n  removeAll() {\n    this.setState({\n      comparedMasts: [],\n      highlightedProfile: undefined\n    });\n  }\n\n  isCompared(mast) {\n    return this.state.comparedMasts.includes(mast);\n  }\n\n  isAnyCompared() {\n    return this.state.comparedMasts.length > 0;\n  }\n\n  isHighlighted(profile) {\n    return this.state.highlightedProfile === profile;\n  }\n    \n  isHighlightedClass(profileClass) {\n    return profileClass.includes(this.state.highlightedProfile);\n  }\n    \n  sortProfileFirst(profile) {\n    const sorted = Array.from(this.state.allMasts)\n      .sort((m1,m2) => this.compareToProfile(m1,m2,profile));\n    const state = {\n      allMasts: sorted\n    };\n    if(!this.isAnyCompared())\n      state.highlightedProfile = profile;\n    this.setState(state);\n  }\n\n  getProfileClassName(profile) {\n    let className = ProfileClass.getClassNameOf(profile);\n    if(this.isHighlighted(profile))\n      className += \" highlighted\";\n    return className;\n  }\n\n  sortByName(sort) {\n    const sorted = Array.from(this.state.allMasts)\n      .sort(sort);\n    const state = {\n      allMasts: sorted\n    };\n    if(!this.isAnyCompared())\n      state.highlightedProfile = undefined;\n    this.setState(state);\n  }\n\n  sortByNameDescending() {\n    this.sortByName((m1,m2) => -1*this.compareMastName(m1,m2));\n  }\n\n  sortByNameAscending() {\n    this.sortByName(this.compareMastName);\n  }\n\n  compareToMast(m1,m2,mast) {\n    if(m1 === mast)\n      return -1;\n    else if(m2 === mast)\n      return 1;\n    else\n      return this.compareToProfile(m1,m2,mast.profile);\n  }\n\n  compareToProfile(m1,m2,profile) {\n    const dp1 = Math.abs(m1.profile - profile);\n    const dp2 = Math.abs(m2.profile - profile);\n    const dp = dp1 - dp2;\n    if(dp === 0)\n      return this.compareMastName(m1,m2);\n    else\n      return dp;\n  }\n  \n  compareMastName(m1,m2) {\n    if(m1.name < m2.name)\n      return -1;\n    else if(m1.name > m2.name)\n      return 1;\n    else\n      return 0;\n  }\n};\n \nfunction ComparatorHeader(props) {\n  let comparator = props.comparator;\n  let getClassName = (profileClass) => {\n    let className = profileClass.className;\n    if(comparator.isHighlightedClass(profileClass))\n      className += \" highlighted\";\n    return className;\n  };\n  return (\n    <thead>\n      <tr>\n        <th>Producer</th>\n        <th>Year</th>\n        <th>Size</th>\n        <th>Length</th>\n        <th colSpan=\"5\" className={getClassName(ProfileClass.HardTop)}>\n          <span\n            title=\"Sort hard top first\"\n            className=\"clickable\"\n            onClick={() => comparator.sortProfileFirst(ProfileClass.HardTop.getTypical())}\n          >Hard top</span>\n        </th>\n        <th colSpan=\"5\" className={getClassName(ProfileClass.ConstantCurve)}>\n          <span\n            title=\"Sort constant curve first\"\n            className=\"clickable\"\n            onClick={() => comparator.sortProfileFirst(ProfileClass.ConstantCurve.getTypical())}\n          >Constant curve</span>\n        </th>\n        <th colSpan=\"5\" className={getClassName(ProfileClass.FlexTop)}>\n          <span\n            title=\"Sort flex top first\"\n            className=\"clickable\"\n            onClick={() => comparator.sortProfileFirst(ProfileClass.FlexTop.getTypical())}\n          >Flex Top</span>\n        </th>\n      </tr>\n    </thead>\n  );\n}\n\nclass ComparatorFooter extends React.Component {\n\n  render() {\n    return (\n      <tr>\n        <td\n          colSpan=\"19\"\n          style={{textAlign: 'left'}}\n        >\n          { this.props.comparator.isAnyCompared() ?\n            this.renderNonEmpty() :\n            this.renderEmpty()\n          }\n        </td>\n      </tr>\n    );\n  }\n\n  renderEmpty() {\n    return (\n      <span>Use the ✚ icon next to a producer name to add the mast to the comparison.</span>\n    );\n  }\n\n  renderNonEmpty() {\n    return (\n      <button \n        onClick={() => this.props.comparator.removeAll()}\n      >Remove all compared masts above.</button>\n    );\n  }\n};\n\nclass SortingHeader extends React.Component {\n  \n  render() {\n    let comparator = this.props.comparator;\n    return (\n      <tr>\n        <td className=\"header\">Producer\n          <span\n            title=\"Sort ascending by producer name\"\n            className=\"clickable left-padded\"\n            onClick={() => comparator.sortByNameAscending()}\n          >&#x25b2;</span>\n          <span\n            title=\"Sort descending by producer name\"\n            className=\"clickable\"\n            onClick={() => comparator.sortByNameDescending()}\n          >&#x25bc;</span>\n        </td>\n        <td className=\"header\">Year</td>\n        <td className=\"header\">Size</td>\n        <td className=\"header\">Length</td>\n        {this.getProfileColumns()}\n      </tr>\n    );\n  }\n\n  getProfileColumns() {\n    let comparator = this.props.comparator;\n    let columns = Array(15);\n    for(let profile = 1; profile <= columns.length; profile++) {\n      columns[profile-1] =\n        <td {...this.props} key={profile} className={comparator.getProfileClassName(profile)}>\n          <span\n            title=\"Sort this profile first\"\n            className=\"clickable\"\n            onClick={() => comparator.sortProfileFirst(profile)}\n          >&#x25bc;</span>\n        </td>;\n    }\n    return columns;\n  }\n};\n\nfunction ComparedMasts(props) {\n  let comparator = props.comparator;\n  let buttons = (mast) => [\n    <span\n      title=\"Remove from comparison\"\n      className=\"clickable\"\n      key=\"remove\"\n      onClick={() => comparator.remove(mast)}\n    >✖</span>\n  ];\n  return props.masts\n    .map(m => <MastRow {...props} mast={m} buttons={buttons(m)} key={m.id}/>);\n}\n\nfunction NotComparedMasts(props) {\n  let comparator = props.comparator;\n  let buttons = (mast) => [\n    <span\n      title=\"Add to comparison\"\n      className=\"clickable\"\n      key=\"add\"\n      onClick={() => comparator.compare(mast)}\n    >✚</span>\n  ];\n  return props.masts\n      .filter(m => !comparator.isCompared(m) && props.filter(m))\n      .map((m) => <MastRow {...props} mast={m} buttons={buttons(m)} key={m.id}/>);\n}\n\nfunction MastRow(props) {\n  return (\n    <tr>\n      <td className=\"mast-name\">\n        {props.buttons}\n        <span className=\"left-padded\">{props.mast.name}</span>\n      </td>\n      <td>{props.mast.year}</td>\n      <td>{props.mast.size}</td>\n      <td>{props.mast.length}</td>\n      <ProfileDataColumns {...props}/>\n    </tr>\n  );\n}\n\nclass ProfileDataColumns extends React.Component {\n\n  render() {\n    const values = this.calculateColumnValues(this.props.mast['profile']);\n    return (\n      values.map((v,i) => this.renderColumn(i+1,v))\n    );\n  }\n\n  renderColumn(profile,value) {\n    let comparator = this.props.comparator;\n    return (\n      <td className={comparator.getProfileClassName(profile)} key={profile}>\n        {value ? this.renderClickableMark(() => comparator.sortProfileFirst(profile)) : ''}\n      </td>\n    );\n  }\n\n  renderClickableMark(onClick) {\n    return (\n      <span\n        className=\"clickable\"\n        onClick={onClick}\n      >●</span>\n    );\n  }\n\n  calculateColumnValues(profile) {\n    var values = new Array(15);\n    for(let i=0; i < values.length; i++)\n      values[i] = (Math.abs(profile - (i + 1)) <= 1);\n    return values;\n  }\n};\n","import ReactDOM from 'react-dom';\nimport Comparator from './Comparator';\nimport './index.css';\n\nReactDOM.render(\n    <Comparator />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}